# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

pool:
  vmImage: windows-2022

variables:
- name: resourse_group
  value: nt-devops-rg

- name: vm_name
  value: nt-devops-agent

- name: dbhost
  value: '10.2.2.4'
  readonly: true

- name: port
  value: 27017
  readonly: true

- name: dbname
  value: testingUi
  readonly: true

- name: storageAccQA
  value: ntsparkstorage

- name: KeyVaultName
  value: aiatscaleVault

stages:
# - stage: star_agent
#   pool: Default
#   jobs:
#   - job: clean_folder
#     workspace:
#       clean: all
#     continueOnError : false
  
#   - job: check_env_var
#     dependsOn: clean_folder
#     steps:
#     - task: PowerShell@2
#       inputs:
#         targetType: 'inline'
#         script: |
#           # Write your commands here
#           echo "----------------------Parameter Values----------------------------"
#           echo ""
#           echo "User First Name : ${env:FIRST-NAME}"
#           echo "User Last Name: ${env:LAST-NAME}"
#           echo "Mongodb host : ${env:db_host}:${env:db_port}"
#           echo "Database Name : ${env:db_name}"
#           echo "Storage account : ${env:storage_account}"
#           echo ""
#           echo "----------------------End----------------------------"

- stage: create_customer
  #dependsOn: star_agent
  pool: Default
  jobs:

  - job: clean_folder
    workspace:
      clean: all
    continueOnError : false

  # - job: user_ad
  #   continueOnError: false
  #   steps:
  #    - task: PowerShell@2
  #      inputs:
  #        targetType: 'inline'
  #        script: |
  #           az login -u 'mani.tiwari@newgensoft.com' -p 'qazmlp123$'
  #           terraform init -migrate-state
  #           terraform plan -var "firstname=${env:first-name}" -var "lastname=${env:last-name}"
  #           terraform apply -auto-approve -var "firstname=${env:first-name}" -var "lastname=${env:last-name}"
  #        workingDirectory: '$(System.DefaultWorkingDirectory)/code/userAdd'


  # - job: user_container
  #   dependsOn: user_ad
  #   continueOnError: false
  #   steps:
  #    - task: PowerShell@2
  #      inputs:
  #        targetType: 'inline'
  #        script: |
  #           az login -u 'mani.tiwari@newgensoft.com' -p 'qazmlp123$'
  #           terraform init -reconfigure
  #           terraform plan -var "firstname=${env:first-name}" -var "lastname=${env:last-name}"-var "storageAcc=${env:storage_account}"
  #           terraform apply -auto-approve -var "firstname=${env:first-name}" -var "lastname=${env:last-name}"-var "storageAcc=${env:storage_account}"
  #        workingDirectory: '$(System.DefaultWorkingDirectory)/code/container_userAdd'

 

  # - job: user_assginement
  #   dependsOn: user_container
  #   continueOnError: false
  #   steps:
  #    - task: PowerShell@2
  #      inputs:
  #        targetType: 'inline'
  #        script: |
  #           $StorageAccSceret = "OCS-"+${env:storage_account}+"-ID"
  #           az login -u 'mani.tiwari@newgensoft.com' -p 'qazmlp123$'
  #           $strgAccId = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $StorageAccSceret

  #           $ssPtr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($strgAccId.SecretValue)
  #           try {
  #             $strgAccId = [System.Runtime.InteropServices.Marshal]::PtrToStringBSTR($ssPtr)
  #           } finally {
  #             [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($ssPtr)
  #           }
  #           terraform init -reconfigure
  #           terraform plan -var "strgAccId=$strgAccId"
  #           terraform apply -auto-approve -var "strgAccId=$strgAccId"
  #        workingDirectory: '$(System.DefaultWorkingDirectory)/code/assignment'

  # - job: user_db
  #   dependsOn: user_assginement
  #   continueOnError: false
  #   steps:
  #    - task: PowerShell@2
  #      inputs:
  #        targetType: 'inline'
  #        script: '.\onboarding_addUser.ps1 -firstname ${env:first-name}  -lastname ${env:last-name} -Dbhost ${env:db_host} -Port ${env:db_port} -Dbname ${env:db_name} -StorageAccName ${env:storage_account} -KeyVaultName $(KeyVaultName) -ClientSecret ${env:AZ_SECRET} -ClientID ${env:AZ_CLIENT} -TenantId ${env:AZ_TENANT} -ws $(System.DefaultWorkingDirectory)'
  #        workingDirectory: '$(System.DefaultWorkingDirectory)\files'

  - job: upload_sample_file_to_Container
    continueOnError: false
    steps:
     - task: PowerShell@2
       inputs:
         targetType: 'inline'
         script: |
            $containerName = ${env:FIRST-NAME} + ${env:LAST-NAME}+'container'
            echo ""
            echo "-----------------uploading files to  $containerName--------------------------------"
            echo ""
            $StorageAccSceret = "OCS-"+${env:storage_account}+"-KEY"
            az login -u 'mani.tiwari@newgensoft.com' -p 'qazmlp123$'
            $strgKey = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $StorageAccSceret

            $ssPtr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($strgKey.SecretValue)
            try {
              $strgKey = [System.Runtime.InteropServices.Marshal]::PtrToStringBSTR($ssPtr)
            } finally {
              [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($ssPtr)
            }
            az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob collection20c_1.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/collection20c_1.csv
            az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob AftCensor_10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/AftCensor_10k.csv
            az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob CollectionData10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/CollectionData10k.csv
            az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob Glass10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/Glass10k.csv
            az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob VD_50.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/VD_50.csv 
         workingDirectory: '$(System.DefaultWorkingDirectory)'

