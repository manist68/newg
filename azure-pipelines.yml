# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

pool:
  vmImage: windows-2022

variables:
- name: resourse_group
  value: nt-devops-rg

- name: vm_name
  value: nt-devops-agent

- name: dbhost
  value: '10.2.2.4'
  readonly: true

- name: port
  value: 27017
  readonly: true

- name: dbname
  value: testingUi
  readonly: true

- name: storageAccQA
  value: ntsparkstorage

- name: KeyVaultName
  value: aiatscaleVault

stages:
- stage: clean_folderr
  #dependsOn: star_agent
  pool: Default
  jobs:

  - job: clean_folder
    workspace:
      clean: all
    continueOnError : false

  - job: script_run
    dependsOn: clean_folder
    continueOnError: false
    steps:
     - task: PowerShell@2
       inputs:
         targetType: 'inline'
         script: '.\onboarding_addUser.ps1 -ws $(System.DefaultWorkingDirectory)'
         workingDirectory: '$(System.DefaultWorkingDirectory)\files'

  # - job: upload_sample_file_to_Container
  #   continueOnError: false
  #   steps:
  #    - task: PowerShell@2
  #      inputs:
  #        targetType: 'inline'
  #        script: |
  #           $containerName = ${env:FIRST-NAME} + ${env:LAST-NAME}+'container'
  #           echo ""
  #           echo "-----------------uploading files to  $containerName--------------------------------"
  #           echo ""
  #           $StorageAccSceret = "OCS-"+${env:storage_account}+"-KEY"
  #           az login -u 'mani.tiwari@newgensoft.com' -p 'qazmlp123$'
  #           $strgKey = Get-AzKeyVaultSecret -VaultName $(KeyVaultName) -Name $StorageAccSceret

  #           $ssPtr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($strgKey.SecretValue)
  #           try {
  #             $strgKey = [System.Runtime.InteropServices.Marshal]::PtrToStringBSTR($ssPtr)
  #           } finally {
  #             [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($ssPtr)
  #           }
  #           az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob collection20c_1.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/collection20c_1.csv
  #           az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob AftCensor_10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/AftCensor_10k.csv
  #           az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob CollectionData10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/CollectionData10k.csv
  #           az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob Glass10k.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/Glass10k.csv
  #           az storage blob copy start --account-key $strgKey --account-name ${env:storage_account} --destination-blob VD_50.csv --destination-container $containerName --source-uri https://naiglobalstrg.blob.core.windows.net/psfiles/testfiles/VD_50.csv 
  #        workingDirectory: '$(System.DefaultWorkingDirectory)'

